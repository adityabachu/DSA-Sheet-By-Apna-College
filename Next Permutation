class Solution{
    static List<Integer> nextPermutation(int N, int arr[]){
        // code here
        int i = N - 2; 
        while(i  >= 0 && arr[i] >= arr[i+1])
        {
            i--;
        }
        if(i >= 0)
        {
            int j = N - 1;
            while(j > i && arr[j] <= arr[i])
            {
                j--;
            }
            int temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
        }
        i++;
        int endPtr = N - 1; 
        while(i < endPtr)
        {
            int temp2 = arr[i];
            arr[i] = arr[endPtr];
            arr[endPtr] = temp2;
            i++;
            endPtr--;
        }
        
        List<Integer> ans = new ArrayList<>();
        for(int k = 0; k < N; k++)
        {
            ans.add(arr[k]);
        }
        return ans;
    }
}
